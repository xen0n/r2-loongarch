000000 0000 0000000 10110 RJ___ RD___   sext.h
000000 0000 0000000 10111 RJ___ RD___   sext.b
000000 0000 0100000 RK___ RJ___ RD___   addw
000000 0000 0100001 RK___ RJ___ RD___   add
000000 0000 0100010 RK___ RJ___ RD___   subw
000000 0000 0100011 RK___ RJ___ RD___   sub
000000 0000 0100110 RK___ RJ___ RD___   !selnez     **1 -- may be swapped
000000 0000 0100111 RK___ RJ___ RD___   !seleqz     **1
000000 0000 0101000 RK___ RJ___ RD___   !nor        **2 -- may also be xnor
000000 0000 0101001 RK___ RJ___ RD___   and
000000 0000 0101010 RK___ RJ___ RD___   or          **3 -- mv is sugar for `or rd, zero, rk`
000000 0000 0101011 RK___ RJ___ RD___   xor
000000 0000 0101110 RK___ RJ___ RD___   sll
000000 0000 0110000 RK___ RJ___ RD___   sbs (Set if Bits Set)
000000 0000 0110010 RK___ RJ___ RD___   srl
000000 0000 0111011 RK___ RJ___ RD___   mul
000000 0000 1010110 00000 00000 00000   syscall
000000 0000 1011001 RK___ RJ___ RD___   ofs.w (Offset with Word-size record)
000000 0001 000000 1 IMM__ RJ___ RD___  slliw
000000 0001 000001 IMM___ RJ___ RD___   slli
000000 0001 000100 1 IMM__ RJ___ RD___  srliw
000000 0001 000101 IMM___ RJ___ RD___   srli
000000 0001 001000 1 IMM__ RJ___ RD___  sraiw
000000 0001 001001 IMM___ RJ___ RD___   srai
000000 0001 001100 1 IMM__ RJ___ RD___  roriw
000000 0001 001101 IMM___ RJ___ RD___   rori
000000 0001 1 IMMB_ 1 IMMA_ RJ___ RD___ ext.w
000000 0011 IMMB__ IMMA__ RJ___ RD___   mask
000000 0100 0000001 FK___ FJ___ FD___   fadd.w
000000 0100 0000010 FK___ FJ___ FD___   fadd.d
000000 0100 0000101 FK___ FJ___ FD___   fsub.w
000000 0100 0000110 FK___ FJ___ FD___   fsub.d
000000 0100 0001001 FK___ FJ___ FD___   fmul.w
000000 0100 0001010 FK___ FJ___ FD___   fmul.d
000000 0100 0001101 FK___ FJ___ FD___   fdiv.w
000000 0100 0001110 FK___ FJ___ FD___   fdiv.d
000000 1000 IMM_________ RJ___ RD___    slti
000000 1001 IMM_________ RJ___ RD___    sltiu
000000 1010 IMM_________ RJ___ RD___    addiw       **4 -- li is sugar for `addiw rd, zero, imm`
000000 1011 IMM_________ RJ___ RD___    addi
000000 1100 IMM_________ RJ___ RD___    ati
000000 1101 IMM_________ RJ___ RD___    andi
000000 1110 IMM_________ RJ___ RD___    ori
000000 1111 IMM_________ RJ___ RD___    xori
000101 0 IMM_________________ RD___     aui
000101 1 IMM_________________ RD___     ahi
000111 0 IMM_________________ RD___     auipc
001001 00 IMM___________ RJ___ RD___    lw.2        **5 -- may be unsigned variants of respective instructions
001001 01 IMM___________ RJ___ RD___    sw.2        **6 -- difference is not known
001001 10 IMM___________ RJ___ RD___    ld.2        **6
001001 11 IMM___________ RJ___ RD___    sd.2        **6
001010 0000 IMM_________ RJ___ RD___    lb
001010 0001 IMM_________ RJ___ RD___    lh
001010 0010 IMM_________ RJ___ RD___    lw
001010 0011 IMM_________ RJ___ RD___    ld
001010 0100 IMM_________ RJ___ RD___    sb
001010 0101 IMM_________ RJ___ RD___    sh
001010 0110 IMM_________ RJ___ RD___    sw
001010 0111 IMM_________ RJ___ RD___    sd
001010 1000 IMM_________ RJ___ RD___    lbu
001010 1001 IMM_________ RJ___ RD___    lhu
001010 1100 IMM_________ RJ___ FD___    flw
001010 1101 IMM_________ RJ___ FD___    fsw
001010 1110 IMM_________ RJ___ FD___    fld
001010 1111 IMM_________ RJ___ FD___    fsd
010000 IMMLO___________ RJ___ IMMHI     beqz
010001 IMMLO___________ RJ___ IMMHI     bnez
010010 IMMLO___________ FJ___ IMMHI     !bfp        **8 -- only thing known is this is FP-related
010011 0000000000000000 RJ___ RD___     jalr        **10 -- may as well conform to RRI16 format
010100 IMMLO___________ ? IMMHI____     j           **9 -- all instructions observed has the ? bit same as the immediate's sign bit
010101 IMMLO___________ ? IMMHI____     jal         **9
010110 IMM_____________ RJ___ RD___     beq
010111 IMM_____________ RJ___ RD___     bne
011000 IMM_____________ RJ___ RD___     bgt
011001 IMM_____________ RJ___ RD___     ble
011010 IMM_____________ RJ___ RD___     bgtu
011011 IMM_____________ RJ___ RD___     bleu
